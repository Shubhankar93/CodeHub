<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="2" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="test_suite" duration-ms="17385" started-at="2023-01-29T11:00:38Z" finished-at="2023-01-29T11:00:55Z">
    <groups>
      <group name="SmokeTest">
        <method signature="LoginTest.VerifyApplicationLunch(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@5649fd9b]" name="VerifyApplicationLunch" class="tests.LoginTest"/>
      </group> <!-- SmokeTest -->
    </groups>
    <test name="Loan" duration-ms="17385" started-at="2023-01-29T11:00:38Z" finished-at="2023-01-29T11:00:55Z">
      <class name="tests.LoginTest">
        <test-method status="PASS" signature="startSuite()[pri:0, instance:tests.LoginTest@5649fd9b]" name="startSuite" is-config="true" duration-ms="591" started-at="2023-01-29T16:30:37Z" finished-at="2023-01-29T16:30:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startSuite -->
        <test-method status="PASS" signature="setUp(java.lang.reflect.Method)[pri:0, instance:tests.LoginTest@5649fd9b]" name="setUp" is-config="true" duration-ms="10835" started-at="2023-01-29T16:30:38Z" finished-at="2023-01-29T16:30:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.LoginTest.VerifyApplicationLunch(java.lang.String,java.lang.String) throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="VerifyApplicationLunch(java.lang.String, java.lang.String)[pri:0, instance:tests.LoginTest@5649fd9b]" name="VerifyApplicationLunch" duration-ms="5717" started-at="2023-01-29T16:30:48Z" finished-at="2023-01-29T16:30:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[admin123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[disconnected: received Inspector.detached event
  (failed to check if window was closed: disconnected: Unable to receive message from renderer)
  (Session info: chrome=109.0.5414.120)
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_351'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9e8f1e2a459e0bef3e6258b807266c7c, findElement {using=css selector, value=#userName}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.120, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\SHUBHA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50198}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50198/devtoo..., se:cdpVersion: 109.0.5414.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9e8f1e2a459e0bef3e6258b807266c7c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: disconnected: received Inspector.detached event
  (failed to check if window was closed: disconnected: Unable to receive message from renderer)
  (Session info: chrome=109.0.5414.120)
Build info: version: '4.8.0', revision: '267030adea'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_351'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [9e8f1e2a459e0bef3e6258b807266c7c, findElement {using=css selector, value=#userName}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 109.0.5414.120, chrome: {chromedriverVersion: 109.0.5414.74 (e7c5703604da..., userDataDir: C:\Users\SHUBHA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:50198}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:50198/devtoo..., se:cdpVersion: 109.0.5414.120, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 9e8f1e2a459e0bef3e6258b807266c7c
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at org.openqa.selenium.By$PreW3CLocator.findElement(By.java:429)
	at org.openqa.selenium.By$ById.findElement(By.java:181)
	at org.openqa.selenium.support.ByIdOrName.findElement(ByIdOrName.java:47)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:136)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:80)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:352)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:344)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
	at com.sun.proxy.$Proxy32.sendKeys(Unknown Source)
	at businessFunctions.LoginPage.Login(LoginPage.java:47)
	at tests.LoginTest.VerifyApplicationLunch(LoginTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyApplicationLunch -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:tests.LoginTest@5649fd9b]" name="endTest" is-config="true" duration-ms="774" started-at="2023-01-29T16:30:54Z" finished-at="2023-01-29T16:30:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method status="PASS" signature="endSuite()[pri:0, instance:tests.LoginTest@5649fd9b]" name="endSuite" is-config="true" duration-ms="730" started-at="2023-01-29T16:30:55Z" finished-at="2023-01-29T16:30:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endSuite -->
      </class> <!-- tests.LoginTest -->
    </test> <!-- Loan -->
  </suite> <!-- test_suite -->
</testng-results>
